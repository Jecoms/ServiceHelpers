<?xml version="1.0" encoding="utf-8" ?>
<configuration>

  <configSections>
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
    <section name="ServiceHelpers" type="DontPanic.Helpers.ServiceHelpersConfigSection, DontPanic.ServiceHelpers" allowDefinition="Everywhere" allowLocation="true"/>
  </configSections>

  <loggingConfiguration name="" tracingEnabled="true" defaultCategory="General">
    <listeners>
      <add name="Event Log Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FormattedEventLogTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FormattedEventLogTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        source="Enterprise Library Logging" formatter="Text Formatter"
        log="" machineName="." traceOutputOptions="None" />
      <add listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.SystemDiagnosticsTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        type="System.Diagnostics.ConsoleTraceListener, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
        name="System Diagnostics Trace Listener" />
    </listeners>
    <formatters>
      <add type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        template="Timestamp: {timestamp}{newline}&#xA;Message: {message}{newline}&#xA;Category: {category}{newline}&#xA;Priority: {priority}{newline}&#xA;EventId: {eventid}{newline}&#xA;Severity: {severity}{newline}&#xA;Title:{title}{newline}&#xA;Machine: {localMachine}{newline}&#xA;App Domain: {localAppDomain}{newline}&#xA;ProcessId: {localProcessId}{newline}&#xA;Process Name: {localProcessName}{newline}&#xA;Thread Name: {threadName}{newline}&#xA;Win32 ThreadId:{win32ThreadId}{newline}&#xA;Extended Properties: {dictionary({key} - {value}{newline})}"
        name="Text Formatter" />
    </formatters>
    <categorySources>
      <add switchValue="All" name="General">
        <listeners>
          <add name="System Diagnostics Trace Listener" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events" />
      <notProcessed switchValue="All" name="Unprocessed Category" />
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="Event Log Listener" />
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <appSettings>
    <add key="IMyService5_Load" value="OverrideTests.MyService5, BasicTests" />
  </appSettings>

  <ServiceHelpers maskErrors="false">
    <inproc>
      <endpoint
      contract="SecurityTests.IBusinessToBusinessInProc"
      implementation ="SecurityTests.BusinessToBusinessInProc, SecurityTests" securityEnabled="false" />
    </inproc>
    <external>      
      <endpoint
        contract="SecurityTests.IBusinessToBusinessCurrentUser"
        address="http://localhost/servicehelpers/b2b"/>
      <endpoint
        contract="SecurityTests.IBusinessToBusinessLocalMachine"
        address="http://localhost/servicehelpers/b2b_localmachine"/>
      <endpoint
        contract="SecurityTests.IBusinessToBusinessNoErrorMasking"
        address="http://localhost/servicehelpers/b2b_noerrormasking"/>

      <endpoint
        contract="SecurityTests.IBusinessToBusinessCached"
        address="http://localhost/servicehelpers/b2b_Cached"
        cacheCount="1"/>
      <endpoint
        contract="SecurityTests.IBusinessToBusinessTcp"
        address="net.tcp://localhost:10095/servicehelpersTCP" />
      <endpoint
        contract="SecurityTests.IPublicService1"
        address="http://localhost:8080/servicehelpers/public" />
    </external>
  </ServiceHelpers>

  <system.serviceModel>

    <bindings>
      <ws2007HttpBinding>
        <binding name="ws2007HttpBindingCert">
          <security>
            <message clientCredentialType="Certificate" />
          </security>
        </binding>
      </ws2007HttpBinding>
    </bindings>
    <client>
      <endpoint address="" binding="netTcpRelayBinding" contract="IMetadataExchange"
        name="sb" />
      <endpoint address="http://localhost/servicehelpers" behaviorConfiguration="cert1"
        binding="ws2007HttpBinding" bindingConfiguration="ws2007HttpBindingCert"
        contract="SecurityTests.IRawTcpCertServiceConfig" name="IRawTcpCertServiceConfig">
        <identity>
          <dns value="RawTcpServiceCert1" />
        </identity>
      </endpoint>
    </client>

    <behaviors>
      <endpointBehaviors>
        <behavior name="cert1">
          <clientCredentials>
            <clientCertificate findValue="CN=RawTcpClientCert1" storeLocation="LocalMachine"
              storeName="My" x509FindType="FindBySubjectDistinguishedName" />
            <serviceCertificate>
              <authentication certificateValidationMode="PeerTrust" />
            </serviceCertificate>
          </clientCredentials>
        </behavior>
      </endpointBehaviors>
    </behaviors>       

  </system.serviceModel>
</configuration>